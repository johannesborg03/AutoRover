# Copyright (C) 2025  Christian Berger
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

# Which Docker image shall be used on the GitLab runner?
image: docker:19.03.3

# Details about how to connect to the Docker service to run this build.
variables:
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

services:
  - name: docker:19.03.3-dind

stages:
  - build
  - deploy

# Display information before we start the build.
before_script:
  - docker info
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

# This section describes what shall be done to build and test the project.
build-and-test:
  tags:
    - docker-build
  stage: build
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/' # Only run on semantic version tags
      when: never # If that if statement above is TRUE, run this job, Does not run this job if there is a tag
    - when: always # Prevent it from running under any other condition, If none of the conditions above is true run this
  script:
    - docker build --target builder -t test-runner-image -f Dockerfile .
    - docker run --rm test-runner-image make -C build test #Run tests

# This section describes what shall be done to deploy artefacts from the project.
release:
  tags:
    - docker-build
  stage: deploy
  rules:
    - if: '$CI_COMMIT_TAG =~ /^v[0-9]+\.[0-9]+\.[0-9]+$/' # Only run on semantic version tags
      when: always # If that if statement above is TRUE, run this job
    - when: never # Prevent it from running under any other condition, If none of the conditions above is true run this
  script:
    # Set up QEMU for emulating different architectures
    docker run --rm --privileged multiarch/qemu-user-static --reset -p yes

    # Create and use a buildx builder
    docker buildx create --use --name test-builder
    docker buildx inspect --bootstrap

    # Build for multiple platforms (but don't push)
    docker buildx build --platform linux/amd64,linux/arm/v7 -t test-multiarch-image -f Dockerfile .

    # Build and push multi-platform image
    - docker buildx build --platform linux/amd64,linux/arm/v7 -t "$CI_REGISTRY_IMAGE":"$CI_COMMIT_TAG" --push -f Dockerfile .
